CREATE OR REPLACE TABLE patients_with_pending_sample_testing(order_id INT, item_id INT, sample_no VARCHAR(50), first_name  VARCHAR(50),  middle_name  VARCHAR(50),  last_name  VARCHAR(50), medical_record_number  VARCHAR(50), priority  VARCHAR(50), facility_id INT, item_name VARCHAR(50), sub_department_id VARCHAR(50), sub_department_name VARCHAR(50), created_at timestamp);
TRUNCATE patients_with_pending_sample_testing;
DELIMITER //
CREATE OR REPLACE TRIGGER sample_taken AFTER UPDATE ON tbl_orders FOR EACH ROW BEGIN IF NEW.sample_no IS NOT NULL AND NEW.order_status <> 2 THEN BEGIN INSERT INTO patients_with_pending_sample_testing SELECT order_id, item_id, NEW.sample_no, first_name, middle_name, last_name, medical_record_number, priority, facility_id, item_name, sub_department_id, sub_department_name, date_attended FROM patients_with_pending_sample_taking WHERE request_id = NEW.id; DELETE FROM patients_with_pending_sample_taking WHERE request_id = NEW.id OR timestampdiff(day, date_attended, current_time) > (SELECT sum(days) FROM `tbl_lab_test_lives`); END;END IF; END//
 
CREATE OR REPLACE TRIGGER result_filled AFTER INSERT ON tbl_results FOR EACH ROW BEGIN DELETE FROM patients_with_pending_sample_testing WHERE (order_id = NEW.order_id AND item_id = NEW.item_id) OR timestampdiff(day, created_at, current_time) > (SELECT sum(days) FROM `tbl_lab_test_lives`);  END//
DELIMITER ;

INSERT INTO patients_with_pending_sample_testing SELECT `order`.order_id, `order`.test_id, `order`.sample_no, first_name, middle_name, last_name, medical_record_number, `order`.priority, invoice_line.facility_id, item_name, sub_dept_id, sub_department_name,`request`.created_at FROM tbl_requests `request` JOIN tbl_encounter_invoices invoice ON `request`.visit_date_id = invoice.account_number_id JOIN tbl_invoice_lines invoice_line ON invoice_line.dept_id = 2 AND invoice_line.invoice_id = invoice.id JOIN tbl_orders `order`  ON `order`.sample_no IS NOT NULL AND `request`.id = `order`.order_id AND `order`.test_id = invoice_line.item_id AND DATE(`order`.created_at) = DATE(`request`.created_at) AND  timestampdiff(day, `request`.created_at, current_time) <= (SELECT sum(days) FROM `tbl_lab_test_lives`) GROUP BY `order`.id;