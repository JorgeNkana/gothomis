CREATE OR REPLACE TABLE patients_with_pending_sample_taking(visit_date_id INT, request_id INT, order_id INT,  admission_id INT,  patient_id INT,  date_attended date,  sample_no VARCHAR(50),  item_id INT, test_id INT, first_name  VARCHAR(50),  middle_name  VARCHAR(50),  last_name  VARCHAR(50), `names` VARCHAR(50), medical_record_number  VARCHAR(50),  gender  VARCHAR(50),  dob  VARCHAR(50),  age  VARCHAR(50),  mobile_number  VARCHAR(50),  priority  VARCHAR(50),  facility_id INT, item_name VARCHAR(50), sub_department_id VARCHAR(50), sub_department_name VARCHAR(50), doctor_name VARCHAR(50),category VARCHAR(50));
alter table bills change id id int(11);
ALTER TABLE bills ADD COLUMN IF NOT EXISTS is_admitted BOOLEAN;
ALTER TABLE opd_patients ADD COLUMN IF NOT EXISTS card_no varchar(50) null;
ALTER TABLE opd_patients ADD COLUMN IF NOT EXISTS authorization_number varchar(50) null;
ALTER TABLE opd_patients ADD COLUMN IF NOT EXISTS department_id int null;
DELIMITER //
DROP TRIGGER IF EXISTS filters//
DROP TRIGGER IF EXISTS payment_details//
CREATE OR REPLACE TRIGGER payment_details BEFORE INSERT ON tbl_invoice_lines FOR EACH ROW BEGIN DECLARE scheme int; DECLARE insurance_flag int; DECLARE exemption_flag int; DECLARE onetime_flag int; DECLARE admission int; SELECT pay_cat_id INTO scheme FROM tbl_pay_cat_sub_categories where id = NEW.payment_filter; SELECT exemption_status,insurance,onetime INTO exemption_flag, insurance_flag,onetime_flag FROM tbl_item_prices where id = NEW.item_price_id; IF scheme = 1 AND onetime_flag = 0 THEN SET NEW.is_payable = true; ELSEIF scheme = 2 AND insurance_flag = 0 THEN SET NEW.is_payable = true; ELSEIF scheme = 3 AND exemption_flag = 1 THEN SET NEW.is_payable = true; END IF; IF NEW.corpse_id IS NULL THEN SELECT count(*) INTO admission from tbl_admissions where patient_id = NEW.patient_id and admission_status_id in (1,2,3); ELSE SELECT count(*) INTO admission from tbl_corpse_admissions where corpse_id = NEW.corpse_id and admission_status_id in (1,2,3); END IF; IF admission > 0 THEN SET NEW.is_admitted = true; END IF; SET NEW.main_category_id = scheme; SET NEW.sub_category_name = (SELECT sub_category_name FROM tbl_pay_cat_sub_categories where id = NEW.payment_filter); SET NEW.item_name = (select item_name from tbl_items join tbl_item_prices on tbl_items.id = tbl_item_prices.item_id where tbl_item_prices.id = NEW.item_price_id); SET NEW.price = (select price from tbl_item_prices where id=NEW.item_price_id); SET NEW.item_id = (select item_id from tbl_item_prices where id=NEW.item_price_id); SET NEW.dept_id = (select dept_id from tbl_items where id=NEW.item_id); SET NEW.department_name = (select department_name from tbl_departments where id=NEW.dept_id); SET NEW.sub_dept_id = case when exists(select t1.id from tbl_orders t1 join tbl_requests t2 on t1.visit_date_id = t2.visit_date_id and t2.id = t1.order_id where t2.patient_id = NEW.patient_id and t1.test_id = NEW.item_id) then case when exists(select t1.id from tbl_testspanels t1 where  t1.item_id = NEW.item_id) then (select  sub_department_id from tbl_testspanels t1 INNER JOIN tbl_equipments t2 ON t2.id = t1.equipment_id INNER JOIN tbl_sub_departments  t3 ON t3.id=t2.sub_department_id where  t1.item_id = NEW.item_id limit 1) else (select sub_department_id from tbl_tests where tbl_tests.item_id = NEW.item_id limit 1) end else (select sub_dept_id from tbl_item_sub_departments where tbl_item_sub_departments.item_id = NEW.item_id limit 1) end; SET NEW.sub_department_name = (select sub_department_name from tbl_sub_departments where id=NEW.sub_dept_id); SET NEW.category_description = (select category_description from tbl_payments_categories where id=NEW.main_category_id); SET NEW.name = (select name from users where id=NEW.user_id); IF NEW.patient_id IS NOT NULL THEN BEGIN SET NEW.first_name = (select first_name from tbl_patients where id=NEW.patient_id); SET NEW.middle_name = (select middle_name from tbl_patients where id=NEW.patient_id); SET NEW.last_name = (select last_name from tbl_patients where id=NEW.patient_id); SET NEW.dob = (select dob from tbl_patients where id=NEW.patient_id); SET NEW.gender = (select gender from tbl_patients where id=NEW.patient_id); SET NEW.medical_record_number = (select medical_record_number from tbl_patients where id=NEW.patient_id); SET NEW.mobile_number = (select mobile_number from tbl_patients where id=NEW.patient_id); END;ELSE BEGIN SET NEW.first_name = (select first_name from tbl_corpses where id=NEW.corpse_id); SET NEW.middle_name = (select middle_name from tbl_corpses where id=NEW.corpse_id); SET NEW.last_name = (select last_name from tbl_corpses where id=NEW.corpse_id); SET NEW.dob = (select dob from tbl_corpses where id=NEW.corpse_id); SET NEW.gender = (select gender from tbl_corpses where id=NEW.corpse_id); SET NEW.medical_record_number = (select corpse_record_number from tbl_corpses where id=NEW.corpse_id); SET NEW.mobile_number = (select mobile_number from tbl_corpses where id=NEW.corpse_id); END;END IF;SET NEW.age = (CASE WHEN TIMESTAMPDIFF(YEAR,NEW.dob, CURRENT_DATE) <> 0 THEN CONCAT(TIMESTAMPDIFF(YEAR,NEW.dob, CURRENT_DATE), ' Years') ELSE CASE WHEN TIMESTAMPDIFF(MONTH,NEW.dob, CURRENT_DATE) <> 0 THEN CONCAT(TIMESTAMPDIFF(MONTH, NEW.dob, CURRENT_DATE), ' Months') ELSE CONCAT(TIMESTAMPDIFF(DAY, NEW.dob, CURRENT_DATE), ' Days') END END); END//
DROP TRIGGER IF EXISTS create_searchable_bill_details//
CREATE OR REPLACE TRIGGER create_searchable_bill_details AFTER INSERT ON tbl_invoice_lines FOR EACH ROW BEGIN IF NEW.is_payable AND NEW.status_id = 1 THEN insert into bills select NEW.id, NEW.invoice_id, NEW.facility_id, NEW.patient_id, NEW.corpse_id, NEW.created_at, CASE WHEN NEW.patient_id IS NOT NULL THEN (SELECT CONCAT(ifnull(first_name,''),' ',ifnull(middle_name,''), ' ', ifnull(last_name,''), ' # ',medical_record_number) FROM tbl_patients WHERE id = NEW.patient_id) ELSE CASE WHEN NEW.corpse_id IS NOT NULL THEN (SELECT CONCAT(ifnull(first_name,''),' ',ifnull(middle_name,''), ' ', ifnull(last_name,''), ' # ',corpse_record_number) FROM tbl_corpses WHERE id = NEW.corpse_id) ELSE NULL END END AS name, CASE WHEN NEW.patient_id IS NOT NULL THEN (SELECT gender from tbl_patients where id = NEW.patient_id) ELSE (SELECT gender from tbl_corpses where id = NEW.corpse_id) END as gender, CASE WHEN NEW.patient_id IS NOT NULL THEN (SELECT CASE WHEN STR_TO_DATE(dob,'%Y-%m-%d') IS NOT NULL THEN CASE WHEN TIMESTAMPDIFF(YEAR,dob, CURRENT_DATE) <> 0 THEN CONCAT(TIMESTAMPDIFF(YEAR,dob, CURRENT_DATE), ' Years') ELSE CASE WHEN TIMESTAMPDIFF(MONTH,dob, CURRENT_DATE) <> 0 THEN CONCAT(TIMESTAMPDIFF(MONTH, dob, CURRENT_DATE), ' Months') ELSE CONCAT(TIMESTAMPDIFF(DAY, dob, CURRENT_DATE), ' Days') END END ELSE dob END from tbl_patients where id = NEW.patient_id) ELSE NULL END age, NEW.item_name, NEW.price, NEW.discount, NEW.quantity, NEW.main_category_id, NEW.sub_category_name, NEW.is_admitted; END IF; IF NEW.is_payable IS NOT TRUE AND NEW.patient_id IS NOT NULL AND EXISTS (SELECT t1.id from tbl_prescriptions t1 join tbl_encounter_invoices t2 ON t2.id = NEW.invoice_id and t1.visit_id = t2.account_number_id join tbl_item_prices t3 on NEW.item_price_id = t3.id AND t3.item_id = t1.item_id AND t1.dispensing_status = 2) THEN insert into patients_with_pending_prescriptions select t2.id, t2.patient_id, t2.visit_id,t3.medical_record_number,t3.first_name,t3.last_name,t3.middle_name, concat(t3.medical_record_number,t3.first_name,t3.last_name,t3.middle_name),t1.facility_id from tbl_item_prices t0 inner join tbl_encounter_invoices t1 on t1.id = NEW.invoice_id and t0.id = NEW.item_price_id inner join tbl_prescriptions t2 on t2.item_id = t0.item_id and t2.patient_id = NEW.patient_id and t2.dispensing_status = 2 and t2.visit_id = t1.account_number_id inner join tbl_patients t3 on t3.id = NEW.patient_id inner join tbl_reattendance_free_days t4 on t4.facility_id = t1.facility_id and timestampdiff(day, t2.created_at, current_date) <= t4.days GROUP BY t2.id; END IF; IF NEW.is_payable IS NOT TRUE AND NEW.patient_id IS NOT NULL THEN DELETE FROM opd_patients WHERE patient_id = NEW.patient_id; INSERT INTO opd_patients(`patient_id`,`first_name`,`middle_name`,`last_name`,`medical_record_number`,`name`,`residence_id`,`dob`,`age`,`gender`,`account_number`,`status`,`tallied`,`account_id`,`visit_date`,`payment_filter` ,`bill_id`,`sub_category_name`,`main_category_id`,`search_key`,`facility_id`,`is_admitted`, `card_no`, `authorization_number`, `department_id`)SELECT t1.id,t1.first_name,t1.middle_name,t1.last_name,t1.medical_record_number,CONCAT(t1.first_name,' ',ifnull(t1.middle_name,''),' ',ifnull(t1.last_name,''), ' ', t1.medical_record_number), t1.residence_id,t1.dob,CASE WHEN STR_TO_DATE(dob,'%Y-%m-%d') IS NOT NULL THEN CASE WHEN TIMESTAMPDIFF(YEAR,dob, CURRENT_DATE) <> 0 THEN CONCAT(TIMESTAMPDIFF(YEAR,dob, CURRENT_DATE), ' Years') ELSE CASE WHEN TIMESTAMPDIFF(MONTH,dob, CURRENT_DATE) <> 0 THEN CONCAT(TIMESTAMPDIFF(MONTH, dob, CURRENT_DATE), ' Months') ELSE CONCAT(TIMESTAMPDIFF(DAY, dob, CURRENT_DATE), ' Days') END END ELSE dob END,t1.gender,t4.account_number,t4.status,t4.tallied,t4.id,t4.date_attended,t4.patient_category_id,t4.patient_category_id,t4.sub_category_name,t4.main_category_id,CONCAT(t1.first_name,ifnull(t1.middle_name,''),ifnull(t1.last_name,''), t1.medical_record_number),NEW.facility_id,CASE WHEN EXISTS (SELECT * FROM tbl_admissions WHERE account_id = t4.id AND admission_status_id IN (1,2,3) LIMIT 1) THEN TRUE ELSE FALSE END, t4.card_no, t4.authorization_number,(SELECT t01.dept_id FROM tbl_invoice_lines t01 JOIN tbl_item_prices t02 ON t01.patient_id = NEW.patient_id AND t01.item_price_id = t02.id AND t02.item_id IN(SELECT service_id FROM tbl_registrar_services) AND TIMESTAMPDIFF(day, t01.created_at, CURRENT_DATE) <= (SELECT days FROM tbl_reattendance_free_days t03 WHERE t03.facility_id = NEW.facility_id) order by t01.id desc limit 1) FROM tbl_encounter_invoices t5 JOIN tbl_accounts_numbers t4 ON t5.id = NEW.invoice_id AND t4.id = t5.account_number_id JOIN tbl_patients t1 ON t1.id=t4.patient_id AND EXISTS(SELECT t1.id FROM tbl_invoice_lines t1 JOIN tbl_item_prices t2 ON t1.patient_id = NEW.patient_id AND t1.item_price_id = t2.id AND t2.item_id IN(SELECT service_id FROM tbl_registrar_services) AND TIMESTAMPDIFF(day, t1.created_at, CURRENT_DATE) <= (SELECT days FROM tbl_reattendance_free_days t3 WHERE t3.facility_id = NEW.facility_id)); ELSEIF NEW.is_payable AND EXISTS(SELECT t1.id FROM tbl_item_prices t1 JOIN tbl_registrar_services t2 ON t1.id = NEW.item_price_id AND t1.item_id = t2.service_id) THEN DELETE FROM opd_patients WHERE patient_id = NEW.patient_id AND is_admitted IS NOT TRUE; END IF;IF NEW.is_payable IS NOT TRUE AND NEW.patient_id IS NOT NULL AND NEW.dept_id = 2 THEN INSERT INTO patients_with_pending_sample_taking SELECT `request`.visit_date_id,`order`.id, `order`.order_id,`request`.admission_id,`request`.patient_id,date(`request`.created_at),NULL,`order`.test_id,`order`.test_id,NEW.first_name,NEW.middle_name,NEW.last_name,CONCAT(NEW.first_name,' ',NEW.middle_name,' ',NEW.last_name), NEW.medical_record_number,NEW.gender,NEW.dob,NEW.age,NEW.mobile_number,`order`.priority,NEW.facility_id, NEW.item_name, NEW.sub_dept_id, NEW.sub_department_name, doctor.name, NEW.sub_category_name FROM tbl_requests `request` JOIN tbl_encounter_invoices invoice ON invoice.id = NEW.invoice_id  AND `request`.visit_date_id = invoice.account_number_id JOIN tbl_orders `order`  ON `order`.visit_date_id = `request`.visit_date_id AND `request`.id = `order`.order_id AND `order`.test_id = NEW.item_id JOIN users doctor ON doctor.id = `request`.doctor_id GROUP BY NEW.id;END IF; END//
DROP TRIGGER IF EXISTS update_searchable_bill_details//
CREATE OR REPLACE TRIGGER update_searchable_bill_details AFTER UPDATE ON tbl_invoice_lines FOR EACH ROW BEGIN IF NEW.status_id = 2 OR NEW.status_id = 3 OR NEW.payment_filter = 3 THEN DELETE FROM bills WHERE id = NEW.id; ELSE UPDATE bills set discount = NEW.discount WHERE id = NEW.id;  END IF; IF NEW.status_id = 2 OR NEW.payment_filter = 3 AND NEW.patient_id IS NOT NULL AND EXISTS (SELECT t1.id from tbl_prescriptions t1 join tbl_encounter_invoices t2 on t2.id = NEW.invoice_id and t1.visit_id = t2.account_number_id join tbl_item_prices t3 on NEW.item_price_id = t3.id AND t3.item_id = t1.item_id and t1.dispensing_status = 2) THEN insert into patients_with_pending_prescriptions select t2.id, t2.patient_id,t2.visit_id,t3.medical_record_number,t3.first_name,t3.last_name,t3.middle_name, concat(t3.medical_record_number,t3.first_name,t3.last_name,t3.middle_name),t1.facility_id from tbl_item_prices t0 inner join tbl_encounter_invoices t1 on t1.id = NEW.invoice_id and t0.id = NEW.item_price_id inner join tbl_prescriptions t2 on t2.item_id = t0.item_id and t2.patient_id = NEW.patient_id and t2.dispensing_status = 2 and t2.visit_id = t1.account_number_id inner join tbl_patients t3 on t3.id = NEW.patient_id inner join tbl_reattendance_free_days t4 on t4.facility_id = t1.facility_id and timestampdiff(day, t2.created_at, current_date) <= t4.days GROUP BY t2.id; END IF; IF (NEW.status_id = 2 OR NEW.payment_filter = 3) AND NEW.patient_id IS NOT NULL THEN DELETE FROM opd_patients WHERE patient_id = NEW.patient_id; INSERT INTO opd_patients(`patient_id`,`first_name`,`middle_name`,`last_name`,`medical_record_number`,`name`,`residence_id`,`dob`,`age`,`gender`,`account_number`,`status`,`tallied`,`account_id`,`visit_date`,`payment_filter` ,`bill_id`,`sub_category_name`,`main_category_id`,`search_key`,`facility_id`,`is_admitted`,`card_no`,`authorization_number`, `department_id`)SELECT t1.id,t1.first_name,t1.middle_name,t1.last_name,t1.medical_record_number,CONCAT(t1.first_name,' ',ifnull(t1.middle_name,''),' ',ifnull(t1.last_name,''), ' ', t1.medical_record_number), t1.residence_id,t1.dob,CASE WHEN STR_TO_DATE(dob,'%Y-%m-%d') IS NOT NULL THEN CASE WHEN TIMESTAMPDIFF(YEAR,dob, CURRENT_DATE) <> 0 THEN CONCAT(TIMESTAMPDIFF(YEAR,dob, CURRENT_DATE), ' Years') ELSE CASE WHEN TIMESTAMPDIFF(MONTH,dob, CURRENT_DATE) <> 0 THEN CONCAT(TIMESTAMPDIFF(MONTH, dob, CURRENT_DATE), ' Months') ELSE CONCAT(TIMESTAMPDIFF(DAY, dob, CURRENT_DATE), ' Days') END END ELSE dob END,t1.gender,t4.account_number,t4.status,t4.tallied,t4.id,t4.date_attended,t4.patient_category_id,t4.patient_category_id,t4.sub_category_name,t4.main_category_id,CONCAT(t1.first_name,ifnull(t1.middle_name,''),ifnull(t1.last_name,''), t1.medical_record_number),NEW.facility_id,CASE WHEN EXISTS (SELECT * FROM tbl_admissions WHERE account_id = t4.id AND admission_status_id IN (1,2,3) LIMIT 1) THEN TRUE ELSE FALSE END, t4.card_no, t4.authorization_number,(SELECT t01.dept_id FROM tbl_invoice_lines t01 JOIN tbl_item_prices t02 ON t01.patient_id = NEW.patient_id AND t01.item_price_id = t02.id AND t02.item_id IN(SELECT service_id FROM tbl_registrar_services) AND TIMESTAMPDIFF(day, t01.created_at, CURRENT_DATE) <= (SELECT days FROM tbl_reattendance_free_days t03 WHERE t03.facility_id = NEW.facility_id) order by t01.id desc limit 1) FROM tbl_encounter_invoices t5 JOIN tbl_accounts_numbers t4 ON t5.id = NEW.invoice_id AND t4.id = t5.account_number_id JOIN tbl_patients t1 ON t1.id=t4.patient_id AND EXISTS(SELECT t1.id FROM tbl_invoice_lines t1 JOIN tbl_item_prices t2 ON t1.patient_id = NEW.patient_id AND t1.item_price_id = t2.id AND t2.item_id IN(SELECT service_id FROM tbl_registrar_services) AND TIMESTAMPDIFF(day, t1.created_at, CURRENT_DATE) <= (SELECT days FROM tbl_reattendance_free_days t3 WHERE t3.facility_id = NEW.facility_id)); END IF;IF(NEW.status_id = 2 OR (NEW.status_id = 1 AND NEW.payment_filter = 3 AND NEW.is_payable)) AND NEW.patient_id IS NOT NULL AND NEW.dept_id = 2 THEN INSERT INTO patients_with_pending_sample_taking SELECT `request`.visit_date_id,`order`.id, `order`.order_id,`request`.admission_id,`request`.patient_id,date(`request`.created_at),NULL,`order`.test_id,`order`.test_id,NEW.first_name,NEW.middle_name,NEW.last_name,CONCAT(NEW.first_name,' ',NEW.middle_name,' ',NEW.last_name), NEW.medical_record_number,NEW.gender,NEW.dob,NEW.age,NEW.mobile_number,`order`.priority,NEW.facility_id, NEW.item_name, NEW.sub_dept_id, NEW.sub_department_name, doctor.name, NEW.sub_category_name FROM tbl_requests `request` JOIN tbl_encounter_invoices invoice ON invoice.id = NEW.invoice_id  AND `request`.visit_date_id = invoice.account_number_id JOIN tbl_orders `order` ON `order`.visit_date_id = `request`.visit_date_id AND  `request`.id = `order`.order_id AND `order`.test_id = NEW.item_id JOIN users doctor ON doctor.id = `request`.doctor_id GROUP BY NEW.id;END IF; END//
DROP TRIGGER IF EXISTS delete_searchable_bill_details//
CREATE OR REPLACE TRIGGER delete_searchable_bill_details AFTER DELETE ON tbl_invoice_lines FOR EACH ROW BEGIN DELETE FROM bills WHERE id = 0; END//
DROP TRIGGER IF EXISTS delete_outdated_bills//
CREATE OR REPLACE TRIGGER delete_outdated_bills AFTER INSERT ON tbl_encounter_invoices FOR EACH ROW BEGIN DELETE FROM bills WHERE is_admitted IS NOT TRUE AND timestampdiff(day, created_at, current_date) > (select days from tbl_reattendance_free_days where facility_id = NEW.facility_id); END//
DELIMITER ;

truncate bills;
insert into bills select tbl_invoice_lines.id,invoice_id,tbl_invoice_lines.facility_id,patient_id,corpse_id,tbl_invoice_lines.created_at,CONCAT(ifnull(first_name,''),' ',ifnull(middle_name,''), ' ', ifnull(last_name,''), ' # ',medical_record_number),gender, age,item_name,price,discount,quantity,main_category_id,sub_category_name, is_admitted from tbl_invoice_lines join tbl_reattendance_free_days on tbl_invoice_lines.facility_id = tbl_reattendance_free_days.facility_id and (tbl_invoice_lines.is_admitted or timestampdiff(day, tbl_invoice_lines.created_at, current_timestamp) <= tbl_reattendance_free_days.days)and tbl_invoice_lines.is_payable and tbl_invoice_lines.status_id = 1;

INSERT INTO patients_with_pending_sample_taking SELECT `request`.visit_date_id, `order`.id, `order`.order_id,`request`.admission_id,`request`.patient_id,date(`request`.created_at),NULL,`order`.test_id,`order`.test_id,invoice_line.first_name,invoice_line.middle_name,invoice_line.last_name,CONCAT(invoice_line.first_name,' ',invoice_line.middle_name,' ',invoice_line.last_name), invoice_line.medical_record_number,invoice_line.gender,invoice_line.dob,invoice_line.age,invoice_line.mobile_number,`order`.priority,invoice_line.facility_id, invoice_line.item_name, invoice_line.sub_dept_id, invoice_line.sub_department_name, doctor.name, invoice_line.sub_category_name FROM tbl_requests `request` JOIN tbl_encounter_invoices invoice ON `request`.visit_date_id = invoice.account_number_id JOIN tbl_invoice_lines invoice_line ON dept_id = 2 AND ((invoice_line.is_payable AND (invoice_line.status_id = 2 OR (invoice_line.is_payable AND invoice_line.status_id = 1 AND invoice_line.payment_filter = 3))) OR invoice_line.is_payable IS NOT TRUE) AND invoice_line.invoice_id = invoice.id JOIN tbl_orders `order` ON  `order`.visit_date_id = `request`.visit_date_id AND `order`.sample_no IS NULL AND `request`.id = `order`.order_id AND `order`.test_id = invoice_line.item_id JOIN users doctor ON doctor.id = `request`.doctor_id AND timestampdiff(day, `request`.created_at, current_time) <= (SELECT sum(days) FROM `tbl_lab_test_lives`) GROUP BY `order`.id;