ALTER TABLE patients_to_pos ADD COLUMN IF NOT EXISTS is_admitted BOOLEAN;
DELIMITER //
CREATE OR REPLACE TRIGGER accFilters AFTER INSERT ON tbl_bills_categories FOR EACH ROW BEGIN DECLARE main_category varchar(150); DECLARE sub_category varchar(150); SELECT category_description,sub_category_name INTO main_category,sub_category FROM tbl_payments_categories t1 join tbl_pay_cat_sub_categories t2 on t1.id = t2.pay_cat_id and t2.id = NEW.bill_id; UPDATE tbl_accounts_numbers set category_description = main_category, sub_category_name = sub_category, main_category_id = NEW.main_category_id, patient_category_id = NEW.bill_id WHERE id = NEW.account_id; DELETE FROM patients_to_pos WHERE patient_id = (SELECT patient_id FROM tbl_accounts_numbers WHERE id=NEW.account_id) OR (is_admitted IS NOT True AND TIMESTAMPDIFF(day,CREATED_AT,CURRENT_DATE) > (SELECT t1.days FROM tbl_reattendance_free_days t1 INNER JOIN tbl_accounts_numbers t2 ON t2.id = NEW.account_id AND t2.facility_id = t1.facility_id)) OR (is_admitted AND NOT EXISTS (SELECT t1.id FROM tbl_admissions t1 WHERE t1.patient_id = patients_to_pos.patient_id AND t1.admission_status_id IN (1,2,3) )); INSERT INTO patients_to_pos SELECT '',t1.id,t1.first_name,t1.middle_name,t1.last_name,t1.gender,t1.dob,t1.medical_record_number,t2.account_number,t2.id,t2.facility_id,t2.main_category_id,t2.sub_category_name,t2.category_description,t2.patient_category_id,t2.created_at,t3.admission_status_id, t1.search_field,CASE WHEN t3.admission_status_id IN (1,2,3) THEN True ELSE False END FROM tbl_patients t1 INNER JOIN tbl_accounts_numbers t2 on t2.id = NEW.account_id and t1.id = t2.patient_id LEFT JOIN tbl_admissions t3 on t3.account_id = t2.id and t3.admission_status_id IN (1,2,3); END//
DROP TRIGGER IF EXISTS accFilters2//
CREATE OR REPLACE TRIGGER accFilters2 AFTER UPDATE ON tbl_bills_categories FOR EACH ROW BEGIN DECLARE main_category varchar(150); DECLARE sub_category varchar(150); SELECT category_description,sub_category_name INTO main_category,sub_category FROM tbl_payments_categories t1 join tbl_pay_cat_sub_categories t2 on t1.id = t2.pay_cat_id and t2.id = NEW.bill_id; UPDATE tbl_accounts_numbers set category_description = main_category, sub_category_name = sub_category, main_category_id = NEW.main_category_id, patient_category_id = NEW.bill_id WHERE id = NEW.account_id; DELETE FROM patients_to_pos; INSERT INTO patients_to_pos SELECT '',t1.id,t1.first_name,t1.middle_name,t1.last_name,t1.gender,t1.dob,t1.medical_record_number,t2.account_number,t2.id,t2.facility_id,t2.main_category_id,t2.sub_category_name,t2.category_description,t2.patient_category_id,t2.CREATED_AT,t3.admission_status_id,t1.search_field,CASE WHEN t3.admission_status_id IN (1,2,3) THEN True ELSE false END FROM tbl_patients t1 INNER JOIN tbl_accounts_numbers t2 on t1.id = t2.patient_id AND t2.main_category_id IS NOT NULL LEFT JOIN tbl_admissions t3 on t3.account_id = t2.id INNER JOIN tbl_reattendance_free_days t4 on t2.facility_id = t4.facility_id  AND (timestampdiff(day, t2.date_attended, current_date) <= t4.days OR t3.admission_status_id IN (1,2,3)); DELETE FROM opd_patients; INSERT INTO opd_patients(`patient_id`,`first_name`,`middle_name`,`last_name`,`medical_record_number`,`name`,`residence_id`,`dob`,`age`,`gender`,`account_number`,`status`,`tallied`,`account_id`,`visit_date`,`payment_filter` ,`bill_id`,`sub_category_name`,`main_category_id`,`search_key`,`facility_id`, `is_admitted`, `card_no`, `authorization_number`, department_id) SELECT t1.id,t1.first_name,t1.middle_name,t1.last_name,t1.medical_record_number,CONCAT(t1.first_name,' ',ifnull(t1.middle_name,''),' ',ifnull(t1.last_name,''), ' ', t1.medical_record_number),t1.residence_id,t1.dob,CASE WHEN STR_TO_DATE(dob,'%Y-%m-%d') IS NOT NULL THEN CASE WHEN TIMESTAMPDIFF(YEAR,dob, CURRENT_DATE) <> 0 THEN CONCAT(TIMESTAMPDIFF(YEAR,dob, CURRENT_DATE), ' Years') ELSE CASE WHEN TIMESTAMPDIFF(MONTH,dob, CURRENT_DATE) <> 0 THEN CONCAT(TIMESTAMPDIFF(MONTH, dob, CURRENT_DATE), ' Months') ELSE CONCAT(TIMESTAMPDIFF(DAY, dob, CURRENT_DATE), ' Days') END END ELSE dob END,t1.gender,t2.account_number,t2.status,t2.tallied,t2.id,t2.date_attended,(select t4.patient_category_id from tbl_accounts_numbers t4 where t4.patient_id = t1.id and main_category_id IS NOT NULL order by id desc limit 1),(select t4.patient_category_id from tbl_accounts_numbers t4 where t4.patient_id = t1.id and main_category_id IS NOT NULL order by id desc limit 1),(select t4.sub_category_name from tbl_accounts_numbers t4 where t4.patient_id = t1.id and main_category_id IS NOT NULL order by id desc limit 1),(select t4.main_category_id from tbl_accounts_numbers t4 where t4.patient_id = t1.id and main_category_id IS NOT NULL order by id desc limit 1),CONCAT(t1.first_name,ifnull(t1.middle_name,''),ifnull(t1.last_name,''), t1.medical_record_number),t2.facility_id, CASE WHEN EXISTS (SELECT * FROM tbl_admissions WHERE account_id = t2.id AND admission_status_id IN (1,2,3) LIMIT 1) THEN TRUE ELSE FALSE END, t2.card_no, t2.authorization_number, (SELECT t04.dept_id FROM tbl_invoice_lines t04 JOIN tbl_item_prices t05 ON t04.item_price_id = t05.id AND t05.item_id IN(SELECT service_id FROM tbl_registrar_services) INNER JOIN tbl_reattendance_free_days t03 ON t03.facility_id = t04.facility_id AND timestampdiff(day, t04.created_at, current_date) <= t03.days WHERE t04.patient_id=t1.id AND (t04.status_id = 2 OR t04.is_payable IS NOT TRUE) order by t04.id desc limit 1) FROM tbl_patients t1 INNER JOIN tbl_accounts_numbers t2 ON t2.visit_close = 1 AND t2.main_category_id IS NOT NULL AND t2.patient_id = t1.id INNER JOIN tbl_reattendance_free_days t3 ON t3.facility_id = t2.facility_id AND timestampdiff(day, t2.date_attended, current_date) <= t3.days AND EXISTS(SELECT t4.id FROM tbl_invoice_lines t4 JOIN tbl_item_prices t5 ON t4.item_price_id = t5.id AND t5.item_id IN(SELECT service_id FROM tbl_registrar_services) WHERE t4.patient_id=t1.id AND TIMESTAMPDIFF(day, t4.created_at, CURRENT_DATE) <= t3.days AND (t4.status_id = 2 OR t4.is_payable IS NOT TRUE OR t4.payment_filter = 3)) order by t2.id; END//
DELIMITER ;